{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport fetch from 'isomorphic-unfetch';\nexport function sampleFetchWrapper(input, init) {\n  var data;\n  return _regeneratorRuntime.async(function sampleFetchWrapper$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(input, init).then(function (res) {\n            return res.json();\n          }));\n\n        case 3:\n          data = _context.sent;\n          return _context.abrupt(\"return\", data);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n          throw new Error(_context.t0.message);\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]]);\n}","map":{"version":3,"sources":["/Users/mohamedbgassama/code/knowledgeHouse/projects/alumni_network/alt_client/utils/sample-api.ts"],"names":["fetch","sampleFetchWrapper","input","init","then","res","json","data","Error","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA,OAAO,SAAeC,kBAAf,CACLC,KADK,EAELC,IAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAKgBH,KAAK,CAACE,KAAD,EAAQC,IAAR,CAAL,CAAmBC,IAAnB,CAAwB,UAAAC,GAAG;AAAA,mBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,WAA3B,CALhB;;AAAA;AAKGC,UAAAA,IALH;AAAA,2CAMIA,IANJ;;AAAA;AAAA;AAAA;AAAA,gBAQG,IAAIC,KAAJ,CAAU,YAAIC,OAAd,CARH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import fetch from 'isomorphic-unfetch'\n\nexport async function sampleFetchWrapper(\n  input: RequestInfo,\n  init?: RequestInit\n) {\n  try {\n    const data = await fetch(input, init).then(res => res.json())\n    return data\n  } catch (err) {\n    throw new Error(err.message)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}